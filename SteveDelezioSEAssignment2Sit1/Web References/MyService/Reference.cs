//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SteveDelezioSEAssignment2Sit1.MyService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IServiceManager", Namespace="http://tempuri.org/")]
    public partial class ServiceManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DoWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptArticleMediaManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectArticleMediaManagerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceManager() {
            this.Url = global::SteveDelezioSEAssignment2Sit1.Properties.Settings.Default.SteveDelezioSEAssignment2Sit1_MyService_ServiceManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DoWorkCompletedEventHandler DoWorkCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event CreateArticleCompletedEventHandler CreateArticleCompleted;
        
        /// <remarks/>
        public event AcceptArticleCompletedEventHandler AcceptArticleCompleted;
        
        /// <remarks/>
        public event RejectArticleCompletedEventHandler RejectArticleCompleted;
        
        /// <remarks/>
        public event UpdateArticleCompletedEventHandler UpdateArticleCompleted;
        
        /// <remarks/>
        public event DeleteArticleCompletedEventHandler DeleteArticleCompleted;
        
        /// <remarks/>
        public event AcceptArticleMediaManagerCompletedEventHandler AcceptArticleMediaManagerCompleted;
        
        /// <remarks/>
        public event RejectArticleMediaManagerCompletedEventHandler RejectArticleMediaManagerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/DoWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DoWork() {
            this.Invoke("DoWork", new object[0]);
        }
        
        /// <remarks/>
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        /// <remarks/>
        public void DoWorkAsync(object userState) {
            if ((this.DoWorkOperationCompleted == null)) {
                this.DoWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoWorkOperationCompleted);
            }
            this.InvokeAsync("DoWork", new object[0], this.DoWorkOperationCompleted, userState);
        }
        
        private void OnDoWorkOperationCompleted(object arg) {
            if ((this.DoWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/CreateArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateArticle(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId) {
            this.Invoke("CreateArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId});
        }
        
        /// <remarks/>
        public void CreateArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId) {
            this.CreateArticleAsync(articleTitle, articleContent, articleComment, articlePublishDate, userId, mediaManagerId, articleStatusId, articleStateId, null);
        }
        
        /// <remarks/>
        public void CreateArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, object userState) {
            if ((this.CreateArticleOperationCompleted == null)) {
                this.CreateArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateArticleOperationCompleted);
            }
            this.InvokeAsync("CreateArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId}, this.CreateArticleOperationCompleted, userState);
        }
        
        private void OnCreateArticleOperationCompleted(object arg) {
            if ((this.CreateArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateArticleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/AcceptArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcceptArticle(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.Invoke("AcceptArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId});
        }
        
        /// <remarks/>
        public void AcceptArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.AcceptArticleAsync(articleTitle, articleContent, articleComment, articlePublishDate, userId, mediaManagerId, articleStatusId, articleStateId, articleId, null);
        }
        
        /// <remarks/>
        public void AcceptArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId, object userState) {
            if ((this.AcceptArticleOperationCompleted == null)) {
                this.AcceptArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptArticleOperationCompleted);
            }
            this.InvokeAsync("AcceptArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId}, this.AcceptArticleOperationCompleted, userState);
        }
        
        private void OnAcceptArticleOperationCompleted(object arg) {
            if ((this.AcceptArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptArticleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/RejectArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectArticle(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.Invoke("RejectArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId});
        }
        
        /// <remarks/>
        public void RejectArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.RejectArticleAsync(articleTitle, articleContent, articleComment, articlePublishDate, userId, mediaManagerId, articleStatusId, articleStateId, articleId, null);
        }
        
        /// <remarks/>
        public void RejectArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId, object userState) {
            if ((this.RejectArticleOperationCompleted == null)) {
                this.RejectArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectArticleOperationCompleted);
            }
            this.InvokeAsync("RejectArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId}, this.RejectArticleOperationCompleted, userState);
        }
        
        private void OnRejectArticleOperationCompleted(object arg) {
            if ((this.RejectArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectArticleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/UpdateArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateArticle(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.Invoke("UpdateArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId});
        }
        
        /// <remarks/>
        public void UpdateArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.UpdateArticleAsync(articleTitle, articleContent, articleComment, articlePublishDate, userId, mediaManagerId, articleStatusId, articleStateId, articleId, null);
        }
        
        /// <remarks/>
        public void UpdateArticleAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId, object userState) {
            if ((this.UpdateArticleOperationCompleted == null)) {
                this.UpdateArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArticleOperationCompleted);
            }
            this.InvokeAsync("UpdateArticle", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId}, this.UpdateArticleOperationCompleted, userState);
        }
        
        private void OnUpdateArticleOperationCompleted(object arg) {
            if ((this.UpdateArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArticleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/DeleteArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteArticle(int ArticleId) {
            this.Invoke("DeleteArticle", new object[] {
                        ArticleId});
        }
        
        /// <remarks/>
        public void DeleteArticleAsync(int ArticleId) {
            this.DeleteArticleAsync(ArticleId, null);
        }
        
        /// <remarks/>
        public void DeleteArticleAsync(int ArticleId, object userState) {
            if ((this.DeleteArticleOperationCompleted == null)) {
                this.DeleteArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteArticleOperationCompleted);
            }
            this.InvokeAsync("DeleteArticle", new object[] {
                        ArticleId}, this.DeleteArticleOperationCompleted, userState);
        }
        
        private void OnDeleteArticleOperationCompleted(object arg) {
            if ((this.DeleteArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteArticleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/AcceptArticleMediaManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcceptArticleMediaManager(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.Invoke("AcceptArticleMediaManager", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId});
        }
        
        /// <remarks/>
        public void AcceptArticleMediaManagerAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.AcceptArticleMediaManagerAsync(articleTitle, articleContent, articleComment, articlePublishDate, userId, mediaManagerId, articleStatusId, articleStateId, articleId, null);
        }
        
        /// <remarks/>
        public void AcceptArticleMediaManagerAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId, object userState) {
            if ((this.AcceptArticleMediaManagerOperationCompleted == null)) {
                this.AcceptArticleMediaManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptArticleMediaManagerOperationCompleted);
            }
            this.InvokeAsync("AcceptArticleMediaManager", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId}, this.AcceptArticleMediaManagerOperationCompleted, userState);
        }
        
        private void OnAcceptArticleMediaManagerOperationCompleted(object arg) {
            if ((this.AcceptArticleMediaManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptArticleMediaManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceManager/RejectArticleMediaManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectArticleMediaManager(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.Invoke("RejectArticleMediaManager", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId});
        }
        
        /// <remarks/>
        public void RejectArticleMediaManagerAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId) {
            this.RejectArticleMediaManagerAsync(articleTitle, articleContent, articleComment, articlePublishDate, userId, mediaManagerId, articleStatusId, articleStateId, articleId, null);
        }
        
        /// <remarks/>
        public void RejectArticleMediaManagerAsync(string articleTitle, string articleContent, string articleComment, System.DateTime articlePublishDate, int userId, int mediaManagerId, int articleStatusId, int articleStateId, int articleId, object userState) {
            if ((this.RejectArticleMediaManagerOperationCompleted == null)) {
                this.RejectArticleMediaManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectArticleMediaManagerOperationCompleted);
            }
            this.InvokeAsync("RejectArticleMediaManager", new object[] {
                        articleTitle,
                        articleContent,
                        articleComment,
                        articlePublishDate,
                        userId,
                        mediaManagerId,
                        articleStatusId,
                        articleStateId,
                        articleId}, this.RejectArticleMediaManagerOperationCompleted, userState);
        }
        
        private void OnRejectArticleMediaManagerOperationCompleted(object arg) {
            if ((this.RejectArticleMediaManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectArticleMediaManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DoWorkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void CreateArticleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void AcceptArticleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void RejectArticleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void UpdateArticleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void DeleteArticleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void AcceptArticleMediaManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void RejectArticleMediaManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591